kongcv_get_smscode:得到短信验证码
url:https://api.leancloud.cn/1.1/functions/kongcv_get_smscode
request:
参数说明:
   mobilePhoneNumber - 手机号
请求格式:
   {"mobilePhoneNumber":"xxxxxxxx"}
response:
参数说明:
   result - 返回结果park info
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:      
   RET_OK - success, {\"state\":\"ok\",\"code\":1,\"msg\":\"成功\"}                 
        {"result":"{\"state\":\"ok\",\"code\":1,\"msg\":\"成功\"}"}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}

kongcv_verify_smscode:验证短信验证码
url:https://api.leancloud.cn/1.1/functions/kongcv_verify_smscode
request:
参数说明:
   mobilePhoneNumber - 手机号
   smsCode:短信验证码
请求格式:
   {"mobilePhoneNumber":"xxxxxxxx","smsCode":"sssss"}
response:
参数说明:
   result - 返回结果park info
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:      
   RET_OK - success, {\"state\":\"ok\",\"code\":1,\"msg\":\"成功\"}                 
        {"result":"{\"state\":\"ok\",\"code\":1,\"msg\":\"成功\"}"}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}

kongcv_verify_mobile:验证账户短信验证码
url:https://api.leancloud.cn/1.1/functions/kongcv_verify_mobile
特别说明:
    用在手机号变更后的短信验证,在https的请求header中加入"X-AVOSCloud-Session-Token:<own sessionToken>"
request:
参数说明:
   smsCode:短信验证码
请求格式:
   {"smsCode":"sssss"}
response:
参数说明:
   result - 返回结果park info
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:      
   RET_OK - success, {\"state\":\"ok\",\"code\":1,\"msg\":\"成功\"}                 
        {"result":"{\"state\":\"ok\",\"code\":1,\"msg\":\"成功\"}"}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}

kongcv_get_userinfo:得到用户信息
url:https://api.leancloud.cn/1.1/functions/kongcv_get_userinfo
request:
特别说明:
   在https的请求header中加入"X-AVOSCloud-Session-Token:<own sessionToken>"
参数说明:
   mobilePhoneNumber - 手机号
   user_id - 用户objectId
请求格式:
   {"mobilePhoneNumber":"13xxxxxx","user_id":"xxxx"}
response:
参数说明:
   result - 返回结果user info
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:      
   RET_OK                 
        {user json info}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}

kongcv_put_userinfo:更新用户信息
url:https://api.leancloud.cn/1.1/functions/kongcv_put_userinfo
request:
特别说明:
   在https的请求header中加入"X-AVOSCloud-Session-Token:<own sessionToken>"
参数说明:
   mobilePhoneNumber - 新手机号,如不更新此参数可以不传值或没有,如变更手机需调用kongcv_verify_mobile做短信验证
   user_name - 用户名,如不更新此参数可以不传值或没有
   device_token - 是你从jpush获得的registionId,如不更新此参数可以不传值或没有
   device_type - ios or andriod,如不更新此参数可以不传值或没有
   license_plate - 车牌,如不更新此参数可以不传值或没有
   version - 版本号
   city - 城市
请求格式:
   {"mobilePhoneNumber":"13xxxxxx","user_name":"xxxxx","device_token":"111111", "device_type":"ios", "license_plate":"xxxx","version":"1.0.0", "city":"xxx"}
response:
参数说明:
   result - 返回结果park info
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:      
   RET_OK - success, {\"state\":\"ok\",\"code\":1,\"msg\":\"成功\"}                 
        {"result":"{\"state\":\"ok\",\"code\":1,\"msg\":\"成功\"}"}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}

kongcv_upload_image:更新用户信息
url:https://api.leancloud.cn/1.1/functions/kongcv_upload_image
request:
特别说明:
   在https的请求header中加入"X-AVOSCloud-Session-Token:<own sessionToken>",
   返回结果会返回新的image json数据，需要缓存
参数说明:
   user_id - 用户objectId
   file_name - 手机号.png
   file_base64 - base64 编码的字符串(文件内容要转为base64编码格式)
   image_id - 旧的头像id，没有参数可以不传值或没有,
请求格式:
    {"user_id" : "555c28b8e4b0b7e69366b482","file_name":"xxxxx","file_base64":"xxxxx","image_id":"sssss"}
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
   image - 头像的json数据
回应格式:      
   RET_OK - success, {\"state\":\"ok\",\"code\":1,\"msg\":\"成功\"}                 
        {"result":"{\"state\":\"ok\",\"code\":1,\"msg\":\"成功\", "image":"{xxxxx}"}"}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}

kongcv_signup:手机号和短信验证码一键注册
url:https://api.leancloud.cn/1.1/functions/kongcv_signup
request:
参数说明:
   mobilePhoneNumber":手机号
   smsCode:短信验证码
   role:角色 park_manager - 停车管理员 worker - 地推人员
   mode:模式 debug - 开发模式 release - 上线模式
正常请求格式:
   {"mobilePhoneNumber":"xxxxxxxx","smsCode":"sssss"}
带角色的请求格式:
   {"mobilePhoneNumber":"xxxxxxxx","smsCode":"sssss","role":"park_manager", "mode":"debug"}
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
   sessionToken - 前端必须保存，修改user数据需要传递sessionToken
   device_token - 前端必须保存, 发通知需要device_token
   device_type - 前端必须保存, 发通知需要device_type
   image_url - 前端必须保存, 用户头像需要image_url
   user_id - 用户objectId
回应格式:      
   RET_OK - success, {\"state\":\"ok\",\"code\":1,\"msg\":\"成功\"}                 
        {"result": "{\"state\":\"ok\",\"code\":1,\"msg\":\"成功\",\"sessionToken\":\"809iaa8j9lerejj6dbjfjy4nh\",\"user_id\":\"567a65eb00b08d6c01eb265d\",\"device_token\":\"0011baa4c6c\",\"device_type\":\"ios\",\"image_url\":\"http://ac-ATcs8k4n.clouddn.com/0e3ee07bfb2ca442.jpg\"}"
    }
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}

kongcv_push_smsinfo:发送短信信息
url:https://api.leancloud.cn/1.1/functions/kongcv_push_smsinfo
request:
参数说明:
   mobilePhoneNumber":手机号
   push_type : 发送类型(verify_request-租用请求,verify_accept-接受租用,verify_reject-拒绝租用)
请求格式:
   {"mobilePhoneNumber":"xxxxxxxx", "push_type":"xxx"}
response:
参数说明:
   result - 返回结果park info
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:      
   RET_OK - success, {\"state\":\"ok\",\"code\":1,\"msg\":\"成功\"}                 
        {"result":"{\"state\":\"ok\",\"code\":1,\"msg\":\"成功\"}"}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}

kongcv_get_user_coupon_list:得到优惠卷
url:https://api.leancloud.cn/1.1/functions/kongcv_get_user_coupon_list
request:
特别说明:
   now_day - 服务器当前时间,根据end_date（过期时间）与now_day比较来判断是否过期
   use_type - curb,community
参数说明:
   user_id - 用户objectId
   use_token - 1(启用sessionToken验证),不启用可以不传值或没有这个参数
请求格式:
    {"user_id" : "555c28b8e4b0b7e69366b482","use_token":1}
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:      
   RET_OK - 返回结果集                  
        {record json arrray}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}

kongcv_get_share_coupon:得到分享优惠信息
url:https://api.leancloud.cn/1.1/functions/kongcv_get_share_coupon
request:
请求格式:
   {}
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:      
   RET_OK - 返回结果集                 
        {recordset json array}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}

kongcv_remove_coupon:删除优惠卷
url:https://api.leancloud.cn/1.1/functions/kongcv_remove_coupon
request:
参数说明:
   user_id - 用户objectId
   coupon_id - 优惠卷objectId
   use_token - 1(启用sessionToken验证),不启用可以不传值或没有这个参数
请求格式:
    {"user_id" : "555c28b8e4b0b7e69366b482","coupon_id":"xxxx", "use_token":1}
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:      
   RET_OK - success, {\"state\":\"ok\",\"code\":1,\"msg\":\"成功\"}                 
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}

kongcv_insert_user_coupon:插入优惠卷
url:https://api.leancloud.cn/1.1/functions/kongcv_insert_user_coupon
request:
参数说明:
   user_id - 用户objectId
   coupon_id - 优惠卷objectId
请求格式:
    {"user_id" : "555c28b8e4b0b7e69366b482", "coupon_id":"xxxx"}
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:      
   RET_OK - success, {\"state\":\"ok\",\"code\":1,\"msg\":\"成功\"}                 
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}

kongcv_jpush_message_p2p:发送JPsh推送通知,use_token
url:https://api.leancloud.cn/1.1/functions/kongcv_jpush_message_p2p
request:
参数说明:
   mobilePhoneNumber - 对方手机号
   push_type - 发送类型(verify_request-租用请求,verify_accept-接受租用,verify_reject-拒绝租用,trade_charge-交易计费(道边停车管理员发送),charge_info-支付信息(支付后向收款人发通知), park_push-预订车位推送)
   device_type - 设备类型ios or android
   device_token - 要发送的对方registrationId
   user_id - 自己的user_id
   extras - 附加信息
   park_id - 车位objectId,
   mode - 模式 curb(道边停)community(社区停)
   address - 车位地址
   hire_method_id - 车位出租方式id,通过hire_method_id在hire_mentod对象中判断数组下标,并在hire_price中拿到出租单位价格
   hire_method_field - 车位出租方式字段名称,为hire_method_id同记录的field字段
   hire_start - 出租起始时间,在道边计时模式下不传值
   hire_end - 出租结束时间,在道边计时模式下不传值
   own_device_token - 自己手机的registrationdId(只在verify_request类型下需要,其他类型可以为空或没有)
   own_device_type - 自己手机类型ios or android(只在verify_request类型下需要,其他类型可以为空或没有)
   own_mobile - 自己手机号(只在verify_request, verify_accept类型下需要,其他类型可以为空或没有)
   own_license_plate - 自己的车牌号(只在verify_request类型下需要,其他类型可以为空或没有)
   proxy_mobile - 委托手机号(在curb模式下,如果车位有委托手机需填写)
   price - 停车计费价格,道边计费模式下为扣除定金价格(只在verify_request和trade_charge类型下需要,其他类型可以为空或没有)
   trade_id - 交易单id(只在trade_charge类型下需要,其他类型可以为空或没有)
   pay_type - 支付类型, money(全款),handsel(定金),balance(差额)(只在trade_charge类型下需要,其他类型可以为空或没有)
   pay_tool - 支付工具 alipay(支付宝) wx(微信支付)(只在trade_charge类型下需要,其他类型可以为空或没有)
   use_token - 1(启用sessionToken验证),不启用可以不传值或没有这个参数
请求格式:
   verify_request类型下格式:
   {"mobilePhoneNumber":"1xxxxxxx", "push_type":"verify_request", "device_token":"021a12c5dc4", "device_type":"ios", "user_id":"5629973860b28da5c9b6ca16","extras":{"park_id":"56443f7b00b07eb0181283bb","mode":"community","address":"xxxx", "hire_method_id":"561f4cb460b22ed7ca73ab6c","hire_method_field":"hour_meter","hire_start":"2015-10-17 08:00:00", "hire_end":"2015-10-17
   18:00:00","own_device_token":"021a12c5dc4","own_device_type":"ios","own_mobile":"1xxxxx","own_license_plate":"xxxx","proxy_mobile":"xxxx","push_type":"verify_request","price":100}}
   verify_accept类型下格式:
   {"mobilePhoneNumber":"1xxxxxxx", "push_type":"verify_accept", "device_token":"021a12c5dc4", "device_type":"ios", "user_id":"5629973860b28da5c9b6ca16","extras":{"park_id":"56443f7b00b07eb0181283bb","mode":"community", "address":"xxxx","hire_method_id":"561f4cb460b22ed7ca73ab6c","hire_method_field":"hour_meter","hire_start":"2015-10-17 08:00:00", "hire_end":"2015-10-17 18:00:00","push_type":"verify_accept", "price":100, "own_mobile":"xxxxx"}}
   verify_reject类型下格式:
   {"mobilePhoneNumber":"1xxxxxxx", "push_type":"verify_reject", "device_token":"021a12c5dc4", "device_type":"ios", "user_id":"5629973860b28da5c9b6ca16","extras":{"push_type":"verify_reject"}}
   trade_charge类型下格式:
   {"mobilePhoneNumber":"1xxxxxxx", "push_type":"trade_charge", "device_token":"021a12c5dc4", "device_type":"ios", "user_id":"5629973860b28da5c9b6ca16","extras":{"park_id":"56443f7b00b07eb0181283bb","mode":"community", "address":"xxxx","hire_method_id":"561f4cb460b22ed7ca73ab6c","hire_method_field":"hour_meter","hire_start":"2015-10-17 08:00:00", "hire_end":"2015-10-17
   18:00:00","push_type":"trade_charge","trade_id":"xxxxx","pay_type":"balance","price":100, "pay_tool":"wx"}} 
   park_push类型下收到的通知格式:
   {extras:{"push_type":"park_push", "park_id":"xxxxx", "mode":"curb"}}
response:
参数说明:
   result - 返回结果park info
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:      
   RET_OK - success, {\"state\":\"ok\",\"code\":1,\"msg\":\"成功\"}                 
        {"result":"{\"state\":\"ok\",\"code\":1,\"msg\":\"成功\"}"}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}

kongcv_insert_accept:插入通知接受数据
url:https://api.leancloud.cn/1.1/functions/kongcv_insert_accept
request:
参数说明:
   req_mobile - 被请求方(出租人)手机号
   user_mobile - 请求方(求租人)自己手机号
   park_id - 停车位的objectId
   mode - 模式 curb(道边停)community(社区停)
   {"req_mobile":"xxxxxxxxxx","user_mobile":"xxxxx","park_id":       "xxxxxxxxxxx","mode":"community"}
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:      
   RET_OK - success, {\"state\":\"ok\",\"code\":1,\"msg\":\"成功\"}                 
        {"result":"{\"state\":\"ok\",\"code\":1,\"msg\":\"成功\"}"}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}

kongcv_get_accept:得到通知接受数据
url:https://api.leancloud.cn/1.1/functions/kongcv_get_accept
request:
参数说明:
   user_mobile - 请求方(求租人)自己手机号
   park_id - 停车位的objectId
   mode - 模式 curb(道边停)community(社区停)
   {"user_mobile":"xxxxx","park_id":"xxxxxxxxxxx","mode":"community"}
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:      
   RET_OK - success, {\"state\":\"ok\",\"code\":1,\"msg\":\"成功\"}                 
        {"result":"{\"state\":\"ok\",\"code\":1,\"msg\":\"成功\"}"}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}

kongcv_get_accept_parkinfo:得到通知接受数据并返回parkinfo
url:https://api.leancloud.cn/1.1/functions/kongcv_get_accept_parkinfo
request:
参数说明:
   user_mobile - 请求方(求租人)自己手机号
   park_id - 停车位的objectId
   mode - 模式 curb(道边停)community(社区停)
   {"user_mobile":"xxxxx","park_id":"xxxxxxxxxxx","mode":"community"}
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
   accept - json数据中accept = 1,表示为请求被接受
回应格式:      
   RET_OK -                
        {recordset json array}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}

kongcv_get_service_file:得到服务协议文件
url:https://api.leancloud.cn/1.1/functions/kongcv_get_service_file
request:
请求格式:
   {}
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:      
   RET_OK - 返回结果集                 
        {recordset json array}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}

kongcv_get_advertise:得到轮播图
url:https://api.leancloud.cn/1.1/functions/kongcv_get_advertise
request:
请求格式:
   {}
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:      
   RET_OK - 返回结果集                 
        {recordset json array}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}

kongcv_get_android_version:得到andriod版本
url:https://api.leancloud.cn/1.1/functions/kongcv_get_android_version
特别注明:
   返回结果中must字段为1是强制更新
request:
   app_type - user:用户版, manager:管理员版
请求格式:
   {"app_type":"user"}
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:      
   RET_OK - 返回结果集                 
        {recordset json array}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}

kongcv_get_company_info:得公司信息(关于我们）
url:https://api.leancloud.cn/1.1/functions/kongcv_get_company_info
request:
请求格式:
   {}
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:      
   RET_OK - 返回结果集                 
        {recordset json array}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}

kongcv_get_bank:得银行信息
url:https://api.leancloud.cn/1.1/functions/kongcv_get_bank
request:
请求格式:
   {}
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:      
   RET_OK - 返回结果集                 
        {recordset json array}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}

kongcv_get_park_type:得到停车类型
url:https://api.leancloud.cn/1.1/functions/kongcv_get_park_type
request:
请求格式:
   {}
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:
   返回数据中picture是停车类型的图片，url是图片链接,name是类型名称
   RET_OK - 返回结果集                 
        {recordset json array}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}

kongcv_get_hire_method:得到停车类型的出租方法
url:https://api.leancloud.cn/1.1/functions/kongcv_get_hire_method
request:
请求格式:
   {"park_type_id":"xxxx"}
参数说明:
   park_type_id - 停车类型的objectId
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:
   返回数据中method是出租方式
   RET_OK - 返回结果集                 
        {recordset json array}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}

kongcv_insert_parkdata_share:插入免费停车位数据, use_token
url:https://api.leancloud.cn/1.1/functions/kongcv_insert_parkdata_share
request:
参数说明:
   user_id - 用户的objectId
   address - 停车位地址
   park_detail - 停车位地址的补充描述(数据必须有)
   location_info - 坐标， __type:GeoPoint - 数据类型，latitude - 纬度 longitude - 经度
   city - 城市
   use_token - 1(启用sessionToken验证),不启用可以不传值或没有这个参数
curb请求格式：也适用与community
   {"user_id":"5621f1bf60b27db44ed6d6fd"","address":"xxxxx","park_detail":"xxxx","location_info":{"__type":"GeoPoint","latitude":11.1,"longitude":116.4},"city":"beijing","use_token":1}
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:      
   RET_OK - success, {\"state\":\"ok\",\"code\":1,\"msg\":\"成功\"}                 
        {"result":"{\"state\":\"ok\",\"code\":1,\"msg\":\"成功\"}"}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}

kongcv_put_share_repute:更新免费车位评价
url:https://api.leancloud.cn/1.1/functions/kongcv_put_share_repute
request:
参数说明:
   user_id - 用户的objectId
   repute - 用户评价well(好评),bad(差评)
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:      
   RET_OK - success, {\"state\":\"ok\",\"code\":1,\"msg\":\"成功\"}                 
        {"result":"{\"state\":\"ok\",\"code\":1,\"msg\":\"成功\"}"}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}


kongcv_insert_parkdata:插入停车位数据, use_token
url:https://api.leancloud.cn/1.1/functions/kongcv_insert_parkdata
request:
参数说明:
   user_id - curb(道边停)模式下,传入地推人员objectid,community(社区模式)用户的objectId
   worker_id - curb(道边停)模式下,传入管理员手机号,community(社区停)模式下可以不传值or没有这个参数
   proxy_mobile - 委托手机号(curb模式下,不是必填项)
   address - 停车位地址
   park_detail - 停车位地址的补充描述(数据必须有)
   park_description - 车位描述(车位格式化信息,数据可以为空)
   location_info - 坐标， __type:GeoPoint - 数据类型，latitude - 纬度 longitude - 经度
   hire_start - 出租起始时间,curb(道边停)模式下可以不传值or没有这个参数(车位格式化信息,数据可以为空)
   hire_end - 出租结束时间,curb(道边停)模式下可以不传值or没有这个参数(车位格式化信息,数据可以为空)
   no_hire - 每周不可出租日(车位格式化信息,数据可以为空)
   tail_num - 限行尾号(车位格式化信息,数据可以为空)
   city - 城市
   normal - 正规车位 true:是 false:否，curb(道边停)模式下可以不传值or没有这个参数
   park_area - 车位面积，curb(道边停)模式下可以不传值or没有这个参数(车位格式化信息,数据可以为空)
   park_height - 车位限高，curb(道边停)模式下可以不传值or没有这个参数(车位格式化信息,数据可以为空)
   gate_card - 门禁卡，关于门禁卡的需求，curb(道边停)模式下可以不传值or没有这个参数(车位格式化信息,数据可以为空)
   hire_method_id - 出租类型objectId
   hire_price - 出租价格
   hire_field - 出租类型hire_method_id同记录的field字段
   hire_time - 出租时间段
   park_struct - 结构 地面:0 地下:1 curb(道边停)模式下可以不传值or没有这个参数
   personal - 车位所属性质 1-个人，0-非个人
   mode - 模式 curb(道边停)community(社区停)
   use_token - 1(启用sessionToken验证),不启用可以不传值或没有这个参数
curb请求格式：也适用与community
   {"user_id":"5621f1bf60b27db44ed6d6fd"","worker_id":"13xxxxxx","proxy_mobile":"13xxxxx","address":"xxxxx","park_detail":"xxxx","park_description":"xxxx","location_info":{"__type":"GeoPoint","latitude":11.1,"longitude":116.4}, "hire_start":"2015-10-17 08:00:00", "hire_end":"2015-10-17 18:00:00","no_hire":["1","2"],"tail_num":"5","city":"beijing", "normal":true, "park_area":10,"park_height":5,
   "gate_card":"xxxxx","hire_method_id":["5620a6dc60b27457e84bb21d"],"hire_field":["all_time_day"],"hire_price":["10"],"hire_time":["9:00 - 20:00"],"park_struct":0,"personal":1,"mode":"curb","use_token":1}
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:      
   RET_OK - success, {\"state\":\"ok\",\"code\":1,\"msg\":\"成功\"}                 
        {"result":"{\"state\":\"ok\",\"code\":1,\"msg\":\"成功\"}"}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}

kongcv_put_parkdata:更新停车位数据,use_token
url:https://api.leancloud.cn/1.1/functions/kongcv_put_parkdata
request:
参数说明:
   user_id - 车位用户objectid
   park_id - 停车位的objectId 
   proxy_mobile - 委托手机号(在curb模式下,如果车位有委托手机需填写)
   address - 停车位地址
   park_detail - 停车位地址的补充描述(数据必须有)
   park_description - 车位描述(车位格式化信息,数据可以为空)
   location_info - 坐标， __type:GeoPoint - 数据类型，latitude - 纬度 longitude - 经度
   hire_start - 出租起始时间,curb(道边停)模式下可以不传值or没有这个参数(车位格式化信息,数据可以为空)
   hire_end - 出租结束时间,curb(道边停)模式下可以不传值or没有这个参数(车位格式化信息,数据可以为空)
   no_hire - 每周不可出租日(车位格式化信息,数据可以为空)
   tail_num - 限行尾号(车位格式化信息,数据可以为空)
   city - 城市
   normal - 正规车位 true:是 false:否，curb(道边停)模式下可以不传值or没有这个参数
   park_area - 车位面积，curb(道边停)模式下可以不传值or没有这个参数(车位格式化信息,数据可以为空)
   park_height - 车位限高，curb(道边停)模式下可以不传值or没有这个参数(车位格式化信息,数据可以为空)
   gate_card - 门禁卡，关于门禁卡的需求，curb(道边停)模式下可以不传值or没有这个参数(车位格式化信息,数据可以为空)
   hire_method_id - 出租类型objectId
   hire_price - 出租价格
   hire_time - 出租时间段
   park_struct - 结构 地面:0 地下:1 curb(道边停)模式下可以不传值or没有这个参数
   mode - 模式 curb(道边停)community(社区停)
   use_token - 1(启用sessionToken验证),不启用可以不传值或没有这个参数
curb请求格式：也适用与community
   {"user_id":"13xxxxxx","proxy_mobile":"13xxxx","park_id":"xxxxxx","address":"xxxxx","park_detail":"xxxx","park_description":"xxxx","location_info":{"__type":"GeoPoint","latitude":11.1,"longitude":116.4}, "hire_start":"2015-10-17 08:00:00", "hire_end":"2015-10-17 18:00:00","no_hire":["1","2"],"tail_num":"5","city":"beijing", "normal":true, "park_area":10,"park_height":5, "gate_card":"xxxxx","hire_method_id":["5620a6dc60b27457e84bb21d"],"hire_price":["10"],"hire_time":["9:00 -
   20:00"],"park_struct":0,"mode":"curb","use_token":1}
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:      
   RET_OK - success, {\"state\":\"ok\",\"code\":1,\"msg\":\"成功\"}                 
        {"result":"{\"state\":\"ok\",\"code\":1,\"msg\":\"成功\"}"}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}


kongcv_get_park_date_list:得到车位租用月列表
url:https://api.leancloud.cn/1.1/functions/kongcv_get_park_date_list
request:
   {"park_id":"xxxxxxxxxxx","query_month":"2015-10-01 00:00:00","skip":0,"limit":10,"pay_state":0, "mode":"community"}
参数说明:
   park_id - 停车位的objectId
   query_month - 查询的月份(例如:8月"2015-08-01 00:00:00", 12月"2015-12-01 00:00:00)
   skip - 跳过记录数
   limit - 限定返回记录数
   mode - 模式 curb(道边停)community(社区停)
   pay_state - 0(所有月交易单),1(所有已完成和已支付定金交易单)
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:
   RET_OK - 返回结果集                  
        {record json arrray}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}


kongcv_get_trade_date_list:得到用户租用月列表,use_token
url:https://api.leancloud.cn/1.1/functions/kongcv_get_trade_date_list
request:
   {"user_id":"xxxxx", "query_month":"2015-12-01 00:00:00", "role":        "customer","skip":0, "limit":10,"mode":"community", "pay_state":0,"use_token":1}
参数说明:
   user_id - 用户的objectId
   query_month - 查询的月份(例如:8月"2015-08-01 00:00:00", 12月"2015-12-01 00:00:00)
   role - 角色, hirer(出租人), hirer_second(辅助出租人-道边),customer(顾客,消费者)
   skip - 跳过记录数
   limit - 限定返回记录数
   mode - 模式 curb(道边停)community(社区停)
   pay_state - 0(所有月交易单),1(所有已完成和已支付定金交易单)
   use_token - 1(启用sessionToken验证),不启用可以不传值或没有这个参数
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:
   RET_OK - 返回结果集                  
        {record json arrray}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}

kongcv_insert_tradedata:插入交易数据,use_token
url:https://api.leancloud.cn/1.1/functions/kongcv_insert_tradedata
request:
参数说明:
   user_id - 用户objectid
   hirer_id - 出租人objectId
   park_id - 停车位的objectId
   license_plate - 车牌号
   hire_start - 交易出租起始时间
   hire_end - 交易出租结束时间
   hire_method_id - 出租类型objectId
   property_id - 物业id(社区模式)
   curb_rate - 道边费率(道边模式）
   unit_price - 出租单位价格
   price - 交易价格
   mode - 模式 curb(道边停)community(社区停)
   use_token - 1(启用sessionToken验证),不启用可以不传值或没有这个参数
   extra_flag - "0"(根据租用时间判断小于24小时为短期),"1"长期(大于等于1天)
   {"user_id":"xxxxxxxxxx","hirer_id":"xxxx","license_plate":"xxxx","park_id":"xxxxxxxxxxx","unit_price":"10/小时“, "price":100,"hire_start":"2015-10-17 08:00:00", "hire_end":"2015-10-17 18:00:00","hire_method_id":"5620a6dc60b27457e84bb21d","property_id":"xxx","curb_rate":0.8,"mode":"community","extra_flag":"0","use_token":1}
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
   trade_id - 交易单id
回应格式:      
   RET_OK - success, {\"state\":\"ok\",\"code\":1,\"msg\":\"成功\"}                 
        {"result":"{\"state\":\"ok\",\"code\":1,\"msg\":\"成功\",\"trade_id\":\"xxx\"}"}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}
        {"code":142,"error":"Cloud Code validation failed. Error detail : {\"state\":\"error\", \"code\":65, \"error\":\"车位已被租用,请再找找其他车被吧\"}"}

kongcv_insert_trade_billdata:插入交易数据
url:https://api.leancloud.cn/1.1/functions/kongcv_insert_trade_billdata
注意：调用kongcv_insert_trad_billdata需要交易单id，如果没有trade_id,需要调用kongcv_insert_tradedata接口,支付差额不需要调用kongcv_insert_tradedata,因为已有交易单id
request:
参数说明:
   trade_id - 交易单objectid
   {"trade_id":"xxxxx"}
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
   bill_id - 账单id
回应格式:      
   RET_OK - success, {\"state\":\"ok\",\"code\":1,\"msg\":\"成功\"}                 
        {"result":"{\"state\":\"ok\",\"code\":1,\"msg\":\"成功\",\"bill_id":\"xxxx\"}"}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}

kongcv_put_trade_billdata:插入交易数据(非前端调用接口)
url:https://api.leancloud.cn/1.1/functions/kongcv_put_trade_billdata
request:
参数说明:
   bill_id - 交易账单objectid
   money - 交易钱数
   pay_tool - 支付工具 alipay(支付宝) wx(微信支付)
   pay_id - 第三方返回的支付id
   notify_id - 第三方返回的回执id
   pay_type - 支付类型, money(全款),handsel(定金),balance(差额)
   {"bill_id":"5673ee9560b2f42a12731bb9","money":100,"pay_tool":"alipay","pay_id":"123456","notify_id": "123456", "pay_type":"balance"}
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:      
   RET_OK - success, {\"state\":\"ok\",\"code\":1,\"msg\":\"成功\"}                 
        {"result":"{\"state\":\"ok\",\"code\":1,\"msg\":\"成功\"}"}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}

kongcv_insert_comment:插入评论数据
url:https://api.leancloud.cn/1.1/functions/kongcv_insert_comment
request:
参数说明:
   user_id - 用户objectid
   park_id - 停车位的objectId
   comment - 评论内容
   grade - 车位评分
   mode - 模式 curb(道边停)community(社区停)share(免费停)
   use_token - 1(启用sessionToken验证),不启用可以不传值或没有这个参数
   {"user_id" : "xxxxxx", "comment" : "test comment", "park_id" : "xxxxxxxxxxx","grade":5, "mode" : "community", "use_token":1}
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:      
   RET_OK - success, {\"state\":\"ok\",\"code\":1,\"msg\":\"成功\"}                 
        {"result":"{\"state\":\"ok\",\"code\":1,\"msg\":\"成功\"}"}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}

kongcv_get_comment:得到评论数据
url:https://api.leancloud.cn/1.1/functions/kongcv_get_comment
request:
参数说明:
   park_id - 停车位的objectId
   skip - 跳过记录数
   limit - 限定返回记录数
   mode - 模式 curb(道边停)community(社区停)share(免费停)
   {"park_id" : "xxxxxxxxxxx", "skip":0, "limit":10, "mode" :"community"}
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:      
   RET_OK - 返回结果集                 
        {record json arrray}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}

kongcv_location_search:车位搜索
url:https://api.leancloud.cn/1.1/functions/kongcv_location_search
备注:
在出租方法中新加了停车场(parking)方法，在走kongcv_location_search接口时hire_method_id为所有类型搜索此项可以不传值或没有这个参数
免费车位搜索,mode传share，hire_methond_id,hire_field,sort字段不传值就Ok
request:
参数说明:
   address - 地点名称
   location_info - 坐标数据
   hire_method_id - 出租方式objectid，如果为所有类型搜索此项可以不传值或没有这个参数
   hire_field - 为hire_method_id同记录的field字段值
   sort - price_asc(升序),price_desc(降序),(按hire_field字段价格排序),空值或没在这个字段为距离排序
   skip - 跳过记录数
   limit - 限定返回记录数
   mode - 停车模式 curb(道边停)community(社区停)share(免费停)
请求格式:
   {"address":"xxxx", "location_info":{"latitude":11.1,"longitude":116.4},"hire_method_id":"xxxx","hire_field":"interval_light_day", "sort":"price_asc" "skip":10,"limit":10,"mode":"curb"}
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:      
   RET_OK - 返回结果集                 
        {recordset json array}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}

kongcv_put_park_space:设置停车位空闲or已租
url:https://api.leancloud.cn/1.1/functions/kongcv_put_park_space
request:
请求格式:
   {"park_id":"xxxx","park_space":1, "mode":"curb"}
参数说明:
   park_id - 停车位的objectId
   park_space - 0(已租), 1(空闲)
   mode - 模式 curb(道边停)community(社区停)
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:
   RET_OK - 返回结果集                 
        {record json}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}

kongcv_put_park_hide:设置停车位隐藏or显示
url:https://api.leancloud.cn/1.1/functions/kongcv_put_park_hide
request:
请求格式:
   {"park_id":"xxxx","hide":1, "mode":"community"}
参数说明:
   park_id - 停车位的objectId
   hide - 0(显示), 1(隐藏)
   mode - 模式 curb(道边停)community(社区停)
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:
   RET_OK - 返回结果集                 
        {record json}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}

kongcv_get_park_info:得到停车位详细信息
url:https://api.leancloud.cn/1.1/functions/kongcv_get_park_info
request:
请求格式:
   {"park_id":"xxxx", "mode":"community"}
参数说明:
   park_id - 停车位的objectId
   mode - 模式 curb(道边停)community(社区停)share(免费停)
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:
   RET_OK - 返回结果集                 
        {record json}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}

kongcv_get_park_list:得到停车位列表
url:https://api.leancloud.cn/1.1/functions/kongcv_get_park_list
request:
请求格式:
   {"user_id":"xxxxx", "mobile":"xxxx","skip":0, "limit":10,"mode":        "community", "action":"userid", "use_token":1}
参数说明:
   user_id - 用户objectid
   mobile - 手机号,只能在curb模式下用
   skip - 跳过记录数
   limit - 限定返回记录数
   mode - 模式 curb(道边停)community(社区停)share(免费停)
   action - userid(使用user_id做查询), mobile(使用mobile手机号做查询)
   use_token - 1(启用sessionToken验证),不启用可以不传值或没有这个参数
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:
   RET_OK - 返回结果集                 
        {record json array}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}

kongcv_get_trade_info:得到交易单详细信息(暂时不用)
url:https://api.leancloud.cn/1.1/functions/kongcv_get_trade_info
request:
请求格式:
   {"trade_id":"xxxx","role":"hirer", "mode":"community"}
参数说明:
   trade_id - 交易单的objectId
   role - 角色, hirer(出租人), customer(顾客,消费者)
   mode - 模式 curb(道边停)community(社区停)
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:
   RET_OK - 返回结果集                 
        {record json}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}

kongcv_get_trade_list:得到交易单详细信息(已返回所有详细信息),use_token
url:https://api.leancloud.cn/1.1/functions/kongcv_get_trade_list
request:
特别说明:
    求租下道边拿详细信息走kongcv_get_park_info,但出租类型是trade中的hire_method
请求格式:
   {"user_id":"xxxxx", "role":"customer","hire_method_id":"xxxxx","trade_state":0, "skip":0, "limit":10,"mode":"community", "use_token":1}
参数说明:
   user_id - 用户的objectId
   role - 角色, hirer(出租人), hirer_second(辅助出租人-道边),customer(顾客,消费者)
   hire_method_id - 车位出租方式id,只在curb模式下使用,community可以不传或没有这个参数
   trade_state - 0(未完成交易), 1(已完成交易),3(所有数据)
   skip - 跳过记录数
   limit - 限定返回记录数
   mode - 模式 curb(道边停)community(社区停)
   use_token - 1(启用sessionToken验证),不启用可以不传值或没有这个参数
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:
   RET_OK - 返回结果集                 
        {record json array}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}

kongcv_get_pushmessage_list:得到通知列表
url:https://api.leancloud.cn/1.1/functions/kongcv_get_pushmessage_list
request:
请求格式:
   {"mobilePhoneNumber":"1xxxx","skip":0, "limit":10, "action":"send","mode":"curb"}
参数说明:
   mobile - 自己的手机号
   action - send(发送的消息),recv(接受的消息)
   skip - 跳过记录数
   limit - 限定返回记录数
   mode - 模式 curb(道边停)community(社区停)
response:
   返回结构中state表示message是否操作过
参数说明:
   result - 返回结果
   state - 状态,0(未处理),1(接受),2(拒绝)
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:
   RET_OK - 返回结果集                 
        {record json array}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}

kongcv_insert_feedback:插入反馈信息,use_token
url:https://api.leancloud.cn/1.1/functions/kongcv_insert_feedback
request:
请求格式:
   {"user_id":"xxxxx", "feedback":"xxxx","use_token":1}
参数说明:
   user_id - 用户objectId
   feedback - 反馈信息
   use_token - 1(启用sessionToken验证),不启用可以不传值或没有这个参数
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:
   RET_OK - success, {\"state\":\"ok\",\"code\":1,\"msg\":\"成功\"}                 
        {"result":"{\"state\":\"ok\",\"code\":1,\"msg\":\"成功\"}"}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}

kongcv_change_pushmessage_state:改变推送消息状态
url:https://api.leancloud.cn/1.1/functions/kongcv_change_pushmessage_state
request:
请求格式:
   {"message_id":"xxxxx", "state":1}
参数说明:
   message_id - 消息objectId,verify_request的push消息,extras对象中会有message_id
   state - 状态,0(未处理),1(接受),2(拒绝)
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:
   RET_OK - success, {\"state\":\"ok\",\"code\":1,\"msg\":\"成功\"}                 
        {"result":"{\"state\":\"ok\",\"code\":1,\"msg\":\"成功\"}"}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}

kongcv_query_white_list:查询白名单,use_token
url:https://api.leancloud.cn/1.1/functions/kongcv_query_white_list
request:
请求格式:
   {"mobilePhoneNumber":"xxxxx","use_token":1}
参数说明:
   mobilePhoneNumber - 手机号
   use_token - 1(启用sessionToken验证),不启用可以不传值或没有这个参数
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:
   RET_OK - success, {\"state\":\"ok\",\"code\":1,\"msg\":\"成功\"}                 
   RET_FAIL - fail, {\"state\":\"failed\",\"code\":1,\"msg\":\"失败\"}                 
        {"result":"{\"state\":\"ok\",\"code\":0,\"msg\":\"成功\"}"}
        {"result":"{\"state\":\"failed\",\"code\":1,\"msg\":\"失败\"}"}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}

kongcv_insert_withdraw_deposit:插入提现数据,use_token
url:https://api.leancloud.cn/1.1/functions/kongcv_insert_withdraw_deposit
request:
请求格式:
   {"user_id":"xxxxx", "money":100, "use_token":1}
参数说明:
   user_id - 用户objectId
   money - 提现金额
   use_token - 1(启用sessionToken验证),不启用可以不传值或没有这个参数
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:
   RET_OK - success, {\"state\":\"ok\",\"code\":1,\"msg\":\"成功\"}                 
        {"result":"{\"state\":\"ok\",\"code\":0,\"msg\":\"成功\"}"}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}

kongcv_get_withdraw_deposit:得到提现数据,use_token
url:https://api.leancloud.cn/1.1/functions/kongcv_get_withdraw_deposit
request:
请求格式:
   {"user_id":"xxxxxx","skip":0,"limit":10, "use_token":1}
参数说明:
   user_id - 用户objectId
   skip - 跳过记录数
   limit - 限定返回记录数
   use_token - 1(启用sessionToken验证),不启用可以不传值或没有这个参数
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:
   RET_OK - success        
        {record json array}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}
        
kongcv_put_purse:插入或更新钱包信息,use_token
url:https://api.leancloud.cn/1.1/functions/kongcv_put_purse
request:
请求格式:
   {"user_id":"xxxx", "bank_card":{"bank":"xxx","card":"xxxxx","name":"xxx", "bank_icon_url":"xxxxx"},"passwd":"xxxx", "action":"new", "use_token":1}
参数说明:
   user_id - 用户objectId
   bank_card.bank - 银行类型
   bank_card.card - 银行卡号
   bank_card.name - 持卡人姓名
   bank_card.bank_icon_url - 银行icon_url
   passwd - 提现密码,用md5生成校验码(注意校验码都为小写)
   action - new(新创建),card(更新卡号),passwd(更新密码),system(系统)
   use_token - 1(启用sessionToken验证),不启用可以不传值或没有这个参数
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:
   RET_OK - success, {\"state\":\"ok\",\"code\":1,\"msg\":\"成功\"}                 
        {"result":"{\"state\":\"ok\",\"code\":0,\"msg\":\"成功\"}"}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}

kongcv_verify_purse_passwd:验证钱包密码,use_token
url:https://api.leancloud.cn/1.1/functions/kongcv_verify_purse_passwd
request:
请求格式:
   {"user_id":"xxxxxx","passwd":"xxxx", "use_token":1}
参数说明:
   user_id - 用户objectId
   passwd - 钱包密码(md5校验码)
   use_token - 1(启用sessionToken验证),不启用可以不传值或没有这个参数
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:
   RET_OK - success, {\"state\":\"ok\",\"code\":1,\"msg\":\"成功\"}                 
        {"result":"{\"state\":\"ok\",\"code\":0,\"msg\":\"成功\"}"}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}
 
kongcv_get_purse:得到钱包数据
url:https://api.leancloud.cn/1.1/functions/kongcv_get_purse
request:
请求格式:
   {"user_id":"xxxxxx","skip":0,"limit":10, "use_token":1}
参数说明:
   user_id - 用户objectId
   use_token - 1(启用sessionToken验证),不启用可以不传值或没有这个参数
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:
   RET_OK - success        
        {record json array}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}
 
kongcv_insert_user_group:道边数据插入辅助管理人员(管理员版本)
url:https://api.leancloud.cn/1.1/functions/kongcv_insert_user_group
request:
请求格式:
   {"park_id":"xxxx","mobilePhoneNumber":"xxxx", "mode":"curb"}
参数说明:
   park_id - 车位objectId
   mobilePhoneNumber - 辅助人员手机号
   mode - 模式 curb(道边停)community(社区停)
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:
   RET_OK - success, {\"state\":\"ok\",\"code\":1,\"msg\":\"成功\"}                 
        {"result":"{\"state\":\"ok\",\"code\":0,\"msg\":\"成功\"}"}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}

kongcv_put_user_group:道边数据更新辅助管理人员(管理员版本)
url:https://api.leancloud.cn/1.1/functions/kongcv_put_user_group
request:
请求格式:
   {"park_id":"xxxx","user_group":["user_id"], "mode":"curb"}
参数说明:
   park_id - 车位objectId
   user_group - 辅助人员objectid(user_id)
   mode - 模式 curb(道边停)community(社区停)
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:
   RET_OK - success, {\"state\":\"ok\",\"code\":1,\"msg\":\"成功\"}                 
        {"result":"{\"state\":\"ok\",\"code\":0,\"msg\":\"成功\"}"}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}

kongcv_insert_attach_user:插入隶属与那个主管理员(辅助管理人员要表明从属于那个主管理员)
url:https://api.leancloud.cn/1.1/functions/kongcv_insert_attach_user
request:
特别说明:
   在https的请求header中加入"X-AVOSCloud-Session-Token:<own sessionToken>"
参数说明:
   mobilePhoneNumber - 主管理员手机号
   mode - 模式 curb(道边停)community(社区停)
请求格式:
   {"mobilePhoneNumber":"13xxxxxx", "mode":"curb"}
response:
参数说明:
   result - 返回结果park info
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:      
   RET_OK - success, {\"state\":\"ok\",\"code\":1,\"msg\":\"成功\"}                 
        {"result":"{\"state\":\"ok\",\"code\":1,\"msg\":\"成功\"}"}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}


kongcv_put_trade_charge:道边计时交易价格,时间更新(管理员版本)
url:https://api.leancloud.cn/1.1/functions/kongcv_put_trade_charge
特别说明:
trade_id的交易单中check_state是点击状态,0(未点击),1(开始计费),2(结束计费)
request:
请求格式:
   {"trade_id":"xxxx","mode":"curb","action":"start"}
参数说明:
   trade_id - 交易单objectId
   mode - 模式 curb(道边停),只在道边使用
   action - start(更新hire_start时间),end(更新hire_end时间,并更新价格)
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
   hire_start - 出租起始时间,在道边计时模式下不传值
   hire_end - 出租结束时间,在道边计时模式下不传值
   price - 停车计费价格,道边计费模式下为总价格,发送计费通知需要减去定金,差价为0也需要发送通知
回应格式:
   RET_OK - success, {\"state\":\"ok\",\"code\":1,\"msg\":\"成功\"}                 
        {"result":"{\"state\":\"ok\",\"code\":0,\"msg\":\"成功\"}"}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}


kongcv_put_trade_charge:道边计时交易价格,时间更新(管理员版本)
url:https://api.leancloud.cn/1.1/functions/kongcv_put_trade_charge
特别说明:
trade_id的交易单中check_state是点击状态,0(未点击),1(开始计费),2(结束计费)
request:
请求格式:
   {"trade_id":"xxxx","mode":"curb","action":"start"}
参数说明:
   trade_id - 交易单objectId
   mode - 模式 curb(道边停),只在道边使用
   action - start(更新hire_start时间),end(更新hire_end时间,并更新价格)
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
   hire_start - 出租起始时间,在道边计时模式下不传值
   hire_end - 出租结束时间,在道边计时模式下不传值
   price - 停车计费价格,道边计费模式下为总价格,发送计费通知需要减去定金,差价为0也需要发送通知
回应格式:
   RET_OK - success, {\"state\":\"ok\",\"code\":1,\"msg\":\"成功\"}                 
        {"result":"{\"state\":\"ok\",\"code\":0,\"msg\":\"成功\"}"}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}

kongcv_park_transfer:道边车位转移(管理员版本),use_token
url:https://api.leancloud.cn/1.1/functions/kongcv_park_transfer
request:
请求格式:
   {"user_id":"xxxx", "park_id":"xxxx","transfer_mobile":"13xxxxx","mode":"curb", "use_token":1,"system":1}
参数说明:
   user_id - 用户objectId
   park_id - 车位objectId,
   transfer_mobile - 迁移至手机号用户下
   mode - 模式 curb(道边停),只在道边使用
   use_token - 1(启用sessionToken验证),不启用可以不传值或没有这个参数
   system - 1(系统使用,可忽略验证)
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:
   RET_OK - success, {\"state\":\"ok\",\"code\":1,\"msg\":\"成功\"}                 
        {"result":"{\"state\":\"ok\",\"code\":0,\"msg\":\"成功\"}"}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}

kongcv_insert_invite_code:输入邀请码
url:https://api.leancloud.cn/1.1/functions/kongcv_insert_invite_code
request:
请求格式:
   {"user_id":"xxxx", "invite_code":"xxx", "mobilePhoneNumber":"xxxxx"}
   user_id - 用户objectid
   invite_code - 邀请码
   mobilePhoneNumber - 电话号码
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:      

kongcv_loop_charge:对交易但做计费计算(非前端调用接口)
url:https://api.leancloud.cn/1.1/functions/kongcv_loop_charge
request:
请求格式:
   {"current_date":"2015-12-01", "skip":0, "limit":10}
参数说明:
   current_date - 计费日期
   skip - 跳过记录数
   limit - 限定返回记录数
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:
   RET_OK - success, {\"state\":\"ok\",\"code\":1,\"msg\":\"成功\"}                 
        {"result":"{\"state\":\"ok\",\"code\":0,\"msg\":\"成功\"}"}
   error:
        {"result":{"state":"error", "code":55, "error":"loop error"}"}

kongcv_insert_property:插入物业数据,use_token
url:https://api.leancloud.cn/1.1/functions/kongcv_insert_property
request:
请求格式:
{"user_id":"567a43d134f81a1d87870d62","location_info":{"__type": "GeoPoint","latitude":11.1, "longitude":116.4}, "community_name":"1111","property_name":"2222","city":"xxxx","rate":0.4,"mode": "community"}
参数说明:
   user_id - 用户objectid
   location_info - 坐标， __type:GeoPoint - 数据类型，latitude - 纬度 longitude - 经度
   community_name - 社区名称，社区名称必须是地图数据中地址所包含的文字
   property_name - 物业名称
   city - 城市
   rate - 物业费率
   mode:模式 debug - 开发模式 release - 上线模式
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
   trade_id - 交易单id
回应格式:      
   RET_OK - success, {\"state\":\"ok\",\"code\":1,\"msg\":\"成功\"}                 
        {"result":"{\"state\":\"ok\",\"code\":1,\"msg\":\"成功\",\"trade_id\":\"xxx\"}"}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}

kongcv_insert_park_autopush:插入车位需求地点数据
url:https://api.leancloud.cn/1.1/functions/kongcv_insert_park_autopush
request:
请求格式:
{"user_id":"567a43d134f81a1d87870d62","location_info":{"__type": "GeoPoint","latitude":11.1, "longitude":116.4}, "address":"1111", "city":"xxxx", "use_token":1}
参数说明:
   user_id - 用户objectid
   location_info - 坐标， __type:GeoPoint - 数据类型，latitude - 纬度 longitude - 经度
   city - 城市
   address - 地址
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
   trade_id - 交易单id
回应格式:      
   RET_OK - success, {\"state\":\"ok\",\"code\":1,\"msg\":\"成功\"}                 
        {"result":"{\"state\":\"ok\",\"code\":1,\"msg\":\"成功\",\"trade_id\":\"xxx\"}"}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}

kongcv_get_park_autopush:得到车位需求地点数据
url:https://api.leancloud.cn/1.1/functions/kongcv_get_park_autopush
request:
请求格式:
{"user_id":"567a43d134f81a1d87870d62","use_token":1}
参数说明:
   user_id - 用户objectid
   use_token - 1(启用sessionToken验证),不启用可以不传值或没有这个参数
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
   trade_id - 交易单id
回应格式:      
   RET_OK - success  
        {record json array}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}

kongcv_remove_park_autopush:删除车位需求地点数据
url:https://api.leancloud.cn/1.1/functions/kongcv_remove_park_autopush
request:
请求格式:
   {"autopush_id":"567a43d134f81a1d87870d62"}
参数说明:
   autopush_id - 推送记录objectid
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
   trade_id - 交易单id
回应格式:      
   RET_OK - success, {\"state\":\"ok\",\"code\":1,\"msg\":\"成功\"}                 
        {"result":"{\"state\":\"ok\",\"code\":1,\"msg\":\"成功\",\"trade_id\":\"xxx\"}"}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}

kongcv_change_park_autopush:改变车位需求地点数据推送状态
url:https://api.leancloud.cn/1.1/functions/kongcv_change_park_autopush
request:
请求格式:
   {"autopush_id":"567a43d134f81a1d87870d62", "open":1}
参数说明:
   autopush_id - 推送记录objectid
   open - 推送状态(1:推送,0:不推送)
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
   trade_id - 交易单id
回应格式:      
   RET_OK - success, {\"state\":\"ok\",\"code\":1,\"msg\":\"成功\"}                 
        {"result":"{\"state\":\"ok\",\"code\":1,\"msg\":\"成功\",\"trade_id\":\"xxx\"}"}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}

kongcv_insert_exception:插入异常数据
url:https://api.leancloud.cn/1.1/functions/kongcv_insert_exception
request:
请求格式:
{"user_id":"567a43d134f81a1d87870d62","device_type":"ios","version":"1.0.0","exception":"xxxxx"}
参数说明:
   user_id - 用户objectid
   device_type - ios or andriod
   version - 版本号
   exception - 异常信息
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:      
   RET_OK - success, {\"state\":\"ok\",\"code\":1,\"msg\":\"成功\"}                 
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}

支付接口:(现在接口url均为测试链接)
url:http://kongcv_test.avosapps.com/pingpp_pay
request:
请求格式:
{
    "order_no":"123456",
    "channel":"alipay",
    "amount":100,
    "open_id":"654321", 
    "subject":"test pay",
    "pay_info":"{'cp':0,'cd':'xxxxx','pt':'handsel', 'md':'curb','tk':'xx','tp':'ios','mb':'1xxxxx'}"
}
参数说明:
order_no - bill_id(kongcv_trade_bill objectId, kongcv_insert_trade_billdata接口获得);
channel - 支付渠道,具体有那些看ping++文档，用到的alipay,wx,wx_pub
amount - 支付钱数(ping++这里单位是分,现在这里用元，由后台统一转为分)
open_id - 微信支付，自己账户的open_id
subject - 产品名称，先传车位地址
pay_info - pay_info.cp(coupon) - 优惠卷金额，没有为0
           pay_info.cd(coupon_id) - 优惠卷id
           pay_info.pt(pay_type) - 支付类型,money(全款),handsel(定金),balance(差额)
           pay_info.md(mode) - 模式 cb(道边停-curb)cm(社区停-community)
           pay_info.tk(device_token) - 是你从jpush获得的收款人registionId,如不更新此参数可以不传值或没有
           pay_info.tp(device_type) - ios or (ad-v1.0.3之后版本都用这个表示andriod, andriod),如不更新此参数可以不传值或没有
           pay_info.mb(mobile) - 手机号
计时支付：
1：定金支付，在计时方式下，handsel_state == 0表示要支付定金
2：差额支付，在计时方式下, handsel_state == 1 && check_state == 2可以支付差额(balance)
3：差额支付，在计时方式下, handsel_state == 1 && check_state != 2弹出计时未结束,请稍后支付

支付回执接口:
url:http://kongcv_test.avosapps.com/pingpp_pay/notify

优惠卷使用说明:
type - coupon_money下:
number - 优惠卷金额
limit_number - 限制金额(及满xx元减yy元)
type - coupon_day下:
number - 优惠天数
limit_number - 限制天数(及满xx天减yy天)
type - coupon_discount下:
number - 折扣数
limit_number - 限制金额(及满xx元打折)

push通知逻辑：
1：求租人发通知给出租人，通知类型verify_request
2：出租人接收通知并处理，点击通知到详情页(具体数据见通知extras字段)，可见电话，可以接受(verify_accept)和拒绝(verify_reject)
3：回应verify_accept通知时，要调用kongcv_change_pushmessage_state接口
4：回应verify_reject通知时，要调用kongcv_change_pushmessage_state接口
5：求租人接收到verify_accept通知后，详情页显示支付按钮和电话按钮

rule逻辑:
1：00 - 0（1）不显示电话,订单确认后可见电话,0（2）默认订单确认可点
        1（1）显示电话(最高优先),1(2)订单确认不可见

分享逻辑:
1:从kongcv_get_share_coupon得到分享信息,coupon为优惠卷,url为分享链接
2:分享成功，如果有coupon则调用kongcv_insert_user_coupon接口把user_id, coupon_id传入创建用户优惠卷

免费车位逻辑：
1:添加免费车位调用 kongcv_insert_parkdata_share接口
2:搜索免费车位调用 kongcv_location_search接口，mode传share
  2.1:调用kongcv_get_park_info得到详情数据,well_repute是好评个数，bad_repute是差评个数，new_repute是最新评论(well-好评,bad-差评)
3:更新免费车位评论 kongcv_put_share_repute接口

manager systerm interface:
kongcv_manage_mobile_2_user:得到手机号用户信息
url:https://api.leancloud.cn/1.1/functions/kongcv_manage_mobile_2_user
request:
参数说明:
   mobilePhoneNumber - 手机号
请求格式:
   {"mobilePhoneNumber":"13xxxxxx"}
response:
参数说明:
   result - 返回结果user info
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:      
   RET_OK                 
        {user json info}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}

kongcv_manage_get_trade_action:得到trade action数据
url:https://api.leancloud.cn/1.1/functions/kongcv_manage_get_trade_action
request:
请求格式:
   {"skip":0,"limit":10, "action":[1,4]}
参数说明:
   skip - 跳过记录数
   limit - 限定返回记录数
   action - 0支付,1提现,2退款,3冻结,4提现完成
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:
   RET_OK - success        
        {record json array}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}
 
kongcv_manage_set_trade_action:设置trade action
url:https://api.leancloud.cn/1.1/functions/kongcv_manage_set_trade_action
request:
请求格式:
   {"trade_id":"xxxx","action":1}
参数说明:
   trade_id - 交易单id
   action - 0支付,1提现,2退款,3冻结,4提现完成
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:
   RET_OK - success, {\"state\":\"ok\",\"code\":1,\"msg\":\"成功\"}                 
        {"result":"{\"state\":\"ok\",\"code\":1,\"msg\":\"成功\",\"trade_id\":\"xxx\"}"}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}
 
kongcv_manage_signup:管理端登录
url:https://api.leancloud.cn/1.1/functions/kongcv_manage_signup
request:
请求格式:
   {"user_name":"xxxx", "passwd":"xxxx", "role":"xxxx"}
参数说明:
   user_name - 用户帐号
   passwd - 用户密码
   role - 角色(debug_market-测试市场人员,debug_financial-测试财务人员,release_market-上线市场人员,release_financial-上线财务人员)
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:
   RET_OK - success, {\"state\":\"ok\",\"code\":1,\"msg\":\"成功\"}                 
        {"result":"{\"state\":\"ok\",\"code\":1,\"msg\":\"成功\"}
   RET_FAIL - fail, {\"state\":\"failed\",\"code\":1,\"msg\":\"失败\"}                 
        {"result":"{\"state\":\"failed\",\"code\":1,\"msg\":\"失败\"}"}
   err
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}
 
kongcv_manage_get_user_list:得到user list
url:https://api.leancloud.cn/1.1/functions/kongcv_manage_get_user_list
request:
请求格式:
   {"device_type":"ios","skip":0,"limit":10,"city":"xxxx", "start_date":"2016-01-01 00:00:00","end_date":"2016-02-01 00:00:00"}
参数说明:
   device_type - ios or andriod(选填)
   skip - 跳过记录数
   limit - 限定返回记录数  
   city - 城市(选填)
   start_date - 开始时间(选填)
   end_date - 结束时间(选填)
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:
   RET_OK - success        
        {record json array}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}
 
kongcv_manage_get_user_count:得到user count
url:https://api.leancloud.cn/1.1/functions/kongcv_manage_get_user_count
request:
请求格式:
   {"device_type":"ios","city":"xxxx", "start_date":"2016-01-01 00:00:00","end_date":"2016-02-01 00:00:00"}
参数说明: 
   device_type - ios or andriod(选填)
   city - 城市(选填)
   start_date - 开始时间(选填)
   end_date - 结束时间(选填)
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:
   RET_OK - success        
        {record json}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}
 
kongcv_manage_get_trade_data:得到用户交易月列表数据
url:https://api.leancloud.cn/1.1/functions/kongcv_manage_get_trade_data
request:
   {"user_id":"xxxxx","start_date":"2016-01-01 00:00:00","end_date":"2016-02-01 00:00:00", "role":"customer","skip":0, "limit":10,"mode":"community", "pay_state":0,"action":"list","use_token":1}
参数说明:
   user_id - 用户的objectId,如果user_id为“0”,指查所有数据
   start_date - 开始时间(选填)
   end_date - 结束时间(选填)
   role - 角色, hirer(出租人), hirer_second(辅助出租人-道边),customer(顾客,消费者)
   skip - 跳过记录数
   limit - 限定返回记录数
   mode - 模式 curb(道边停)community(社区停)
   pay_state - 0(所有月交易单),1(所有已完成和已支付定金交易单)
   action - list(得到订单列表数据),count(得到订单列表总数)
   use_token - 1(启用sessionToken验证),不启用可以不传值或没有这个参数
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:
   RET_OK - 返回结果集                  
        {record json arrray}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}

kongcv_manage_get_park_data:得到停车位数据
url:https://api.leancloud.cn/1.1/functions/kongcv_manage_get_park_data
request:
   {"user_id":"xxxx","start_date":"2016-01-01 00:00:00","end_date":"2016-02-01 00:00:00","skip":0, "limit":10,"mode":"community", "action":"list"}
参数说明:
   user_id - 出租人objectid
   start_date - 开始时间(选填)
   end_date - 结束时间(选填)
   skip - 跳过记录数
   limit - 限定返回记录数
   mode - 模式 curb(道边停)community(社区停)share(免费停)
   action - list(得到订单列表数据),count(得到订单列表总数)
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:
   RET_OK - 返回结果集                  
        {record json arrray}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}

kongcv_manage_get_invite_code_data:得到邀请码数据
url:https://api.leancloud.cn/1.1/functions/kongcv_manage_get_invite_code_data
request:
   {"start_date":"2016-01-01 00:00:00","end_date":"2016-02-01 00:00:00","skip":0, "limit":10, "action":"list","invite_code":"xxxx"}
参数说明:
   start_date - 开始时间(选填)
   end_date - 结束时间(选填)
   skip - 跳过记录数
   limit - 限定返回记录数
   action - list(得到列表数据),count(得到列表总数)
   invite_code - 邀请码(不填为查询所有数据)
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:
   RET_OK - 返回结果集                  
        {record json arrray}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}

kongcv_manage_get_feedback_data:得到反馈数据
url:https://api.leancloud.cn/1.1/functions/kongcv_manage_get_feedback_data
request:
   {"start_date":"2015-12-01 00:00:00","end_date":"2015-12-01 00:00:00","skip":0, "limit":10, "action":"list"}
参数说明:
   start_date - 开始时间(选填)
   end_date - 结束时间(选填)
   skip - 跳过记录数
   limit - 限定返回记录数
   action - list(得到列表数据),count(得到列表总数)
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:
   RET_OK - 返回结果集                  
        {record json arrray}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}

kongcv_manage_get_pushmessage_data:得到通知数据
url:https://api.leancloud.cn/1.1/functions/kongcv_manage_get_pushmessage_data
request:
   {"start_date":"2015-12-01 00:00:00","end_date":"2015-12-01 00:00:00","skip":0, "limit":10, "action":"list","mode":"xxx"}
参数说明:
   start_date - 开始时间(选填)
   end_date - 结束时间(选填)
   skip - 跳过记录数
   limit - 限定返回记录数
   action - list(得到列表数据),count(得到列表总数)
   mode - 模式 curb(道边停)community(社区停), 可以不传值
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:
   RET_OK - 返回结果集                  
        {record json arrray}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}

kongcv_manage_get_search_log:得到搜索日志数据
url:https://api.leancloud.cn/1.1/functions/kongcv_manage_get_search_log
request:
   {"start_date":"2015-12-01 00:00:00","end_date":"2015-12-01 00:00:00","skip":0, "limit":10, "action":"list","mode":"curb"}
参数说明:
   start_date - 开始时间(选填)
   end_date - 结束时间(选填)
   skip - 跳过记录数
   limit - 限定返回记录数
   action - list(得到列表数据),count(得到列表总数)
   mode - 模式 curb(道边停)community(社区停), 可以不传值
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:
   RET_OK - 返回结果集                  
        {record json arrray}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}

kongcv_manage_create_coupon:创建优惠卷
url:https://api.leancloud.cn/1.1/functions/kongcv_manage_create_coupon
request:
    {"description" : "xxxx", "number":5, "limit_number":5,"name":"xxxx", "use_days":5,"type":"coupon_money"}
参数说明:
    description - 优惠卷描述
    type - coupon_money下:
        number - 优惠卷金额
        limit_number - 限制金额(及满xx元减yy元)
    type - coupon_day下:
        number - 优惠天数
        limit_number - 限制天数(及满xx天减yy天)
    type - coupon_discount下:
        number - 折扣数
        limit_number - 限制金额(及满xx元打折)
    use_days - 限制使用天数
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:
   RET_OK - success, {\"state\":\"ok\",\"code\":1,\"msg\":\"成功\"}                 
        {"result":"{\"state\":\"ok\",\"code\":1,\"msg\":\"成功\"}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}

kongcv_manage_insert_market_coupon:插入市场人员优惠卷
url:https://api.leancloud.cn/1.1/functions/kongcv_manage_insert_market_coupon
request:
    {"invite_code":"xxxx","coupon_id":"xxx"}
参数说明: 
   invite_code - 邀请码
   coupon_id - 优惠卷objectId
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:
   RET_OK - success, {\"state\":\"ok\",\"code\":1,\"msg\":\"成功\"}                 
        {"result":"{\"state\":\"ok\",\"code\":1,\"msg\":\"成功\"}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}

kongcv_manage_get_user_coupon_list:得到用户优惠卷列表
url:https://api.leancloud.cn/1.1/functions/kongcv_manage_get_user_coupon_list
request:
    {"coupon_id" : "555c28b8e4b0b7e69366b482","skip":0,"limit":10}
参数说明: 
   coupon_id - 优惠卷objectId(可以不填写, 填写为看某个固定优惠卷)
   skip - 跳过记录数
   limit - 限定返回记录数
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:
   RET_OK - 返回结果集                  
        {record json arrray}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}

kongcv_manage_get_market_coupon_list:得到市场人员优惠卷列表
url:https://api.leancloud.cn/1.1/functions/kongcv_manage_get_market_coupon_list
request:
    {"skip":0,"limit":10}
参数说明: 
   skip - 跳过记录数
   limit - 限定返回记录数
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:
   RET_OK - 返回结果集                  
        {record json arrray}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}

kongcv_manage_get_coupon_template_list:得到优惠卷模板列表
url:https://api.leancloud.cn/1.1/functions/kongcv_manage_get_coupon_template_list
request:
    {"skip":0,"limit":10}
参数说明: 
   skip - 跳过记录数
   limit - 限定返回记录数
response:
参数说明:
   result - 返回结果
   state - 状态
   code - 消息编号
   msg - 描述消息
   error - 错误描述
回应格式:
   RET_OK - 返回结果集                  
        {record json arrray}
   error:
        {code:1,"error":"xxxxxxxxxxxxxx"}

